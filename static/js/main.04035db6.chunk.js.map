{"version":3,"sources":["components/Button/Button.module.css","components/Static/Static.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Button/Button.jsx","components/FeedbackOption/FeetbackOption.jsx","components/Static/Static.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["module","exports","Button","nameBtn","onLeaveFeedback","className","s","button","onClick","type","FeedbackOptions","options","map","Static","good","neutral","bad","total","positivePercentage","staticTitle","Section","title","children","mainTitle","Notification","message","messageText","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,YAAc,8B,gBCAhCD,EAAOC,QAAU,CAAC,UAAY,6B,gBCA9BD,EAAOC,QAAU,CAAC,YAAc,oC,qICmBjBC,EAhBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACE,wBACEC,UAAWC,IAAEC,OACbC,QAAS,kBAAMJ,EAAgBD,IAC/BM,KAAK,SAHP,SAKGN,KCGQO,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,gBAAZ,OACtBO,EAAQC,KAAI,SAACT,GAAD,OACV,cAAC,EAAD,CAAsBA,QAASA,EAASC,gBAAiBA,GAA5CD,O,gBCoBFU,EAtBA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC3C,OACE,qCACE,oBAAIb,UAAWC,IAAEa,YAAjB,wBACE,qCACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,gBCEKE,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAEiB,UAAjB,SAA6BF,IAC5BC,M,gBCSQE,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGpB,UAAWC,IAAEoB,YAAhB,SAA8BD,OCDrB,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAGMC,EAAqB,kBAAMlB,EAAOC,EAAUC,GAC5CC,EAAQe,IAKRd,EAFGe,KAAKC,MAAOpB,EAAOkB,IAAwB,KAqBpD,OACE,gCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBV,QA7BV,CAAC,OAAQ,UAAW,OA6BKP,gBApBZ,SAACD,GACzB,OAAQA,GACN,IAAK,OACH0B,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,KAC1B,MAEF,QACE,aASF,cAAC,EAAD,CAASd,MAAM,aAAf,SACa,IAAVJ,EACC,cAAC,EAAD,CAAcQ,QAAQ,yBAEtB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,SC9ChCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,W","file":"static/js/main.04035db6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3OSRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"staticTitle\":\"Static_staticTitle__xrJDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Section_mainTitle__2GRu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageText\":\"Notification_messageText__3v7Pd\"};","import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ nameBtn, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      onClick={() => onLeaveFeedback(nameBtn)}\r\n      type=\"button\"\r\n    >\r\n      {nameBtn}\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  nameBtn: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map((nameBtn) => (\r\n    <Button key={nameBtn} nameBtn={nameBtn} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport s from \"./Static.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Static = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.staticTitle}>Statistics</h2>\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n    </>\r\n  );\r\n};\r\nStatic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Static;\r\n","import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={s.mainTitle}>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={s.messageText}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOption/FeetbackOption.jsx\";\nimport Statistics from \"./Static/Static.jsx\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const keys = [\"good\", \"neutral\", \"bad\"];\n  const countTotalFeedback = () => good + neutral + bad;\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  const handleClickButton = (nameBtn) => {\n    switch (nameBtn) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={keys} onLeaveFeedback={handleClickButton} />\n      </Section>\n      <Section title=\"Statictics\">\n        {total === 0 ? (\n          <Notification message=\"There is no feedback\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}